Algebra(4,1,0,()=>{
    var function_to_sliders = f=>{
var f_args = ["a1= ", "a2= ", "a3= ", "b1= ", "b2= ", "b3= ", "c1= ", "c2= ", "c3= ", "d14= ", "d24= ", "d34= "];
var min_list = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
var max_list = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
var step_list = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01];
var cen_list = [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5];
window.sliderValues = cen_list.slice(0);
var sliderValueTextElements = cen_list.slice(0);
for (let i=0; i<f.length; i++) {
var slideritem = document.createElement('div');
slideritem.setAttribute("class", "slideritem");
document.getElementById("sliderpanel").appendChild(slideritem);
var slidername = document.createElement('a');
slidername.appendChild(document.createTextNode('['+min_list[i]+','+max_list[i]+']'));
slideritem.appendChild(slidername);
var slider = Object.assign(document.createElement('input'),{type:'range',min:min_list[i],max:max_list[i],step:step_list[i],value:cen_list[i]});
slider.oninput = function(){sliderValueTextElements[i].innerHTML=this.value; window.sliderValues[i]=+this.value};
slideritem.appendChild(slider);
var slidername = document.createElement('a');
slidername.appendChild(document.createTextNode(f_args[i]));
slideritem.appendChild(slidername);
sliderValueTextElements[i] = document.createElement('a');
sliderValueTextElements[i].innerHTML = cen_list[i];
slideritem.appendChild(sliderValueTextElements[i]);
}
}

let TIME= 0;
let __sysTimeStart = performance.now();
function calculate(a1, a2, a3, b1, b2, b3, c1, c2, c3, d14, d24, d34) {
  var _coeff_In_e0einf_Basis_x1 = new Element();
  _coeff_In_e0einf_Basis_x1[4] = (a1 * a1 + a2 * a2 + a3 * a3) / 2.0; // ep
  var x1 = new Element();
  x1[1] = a1; // e1
  x1[2] = a2; // e2
  x1[3] = a3; // e3
  x1[4] = (a1 * a1 + a2 * a2 + a3 * a3) / 2.0 + -0.5; // ep
  x1[5] = (a1 * a1 + a2 * a2 + a3 * a3) / 2.0 + 0.5; // em
  var x2 = new Element();
  x2[4] = (b1 * b1 + b2 * b2 + b3 * b3) / 2.0; // ep
  var x3 = new Element();
  x3[4] = (c1 * c1 + c2 * c2 + c3 * c3) / 2.0; // ep
  var _coeff_In_e0einf_Basis_S1 = new Element();
  _coeff_In_e0einf_Basis_S1[4] = _coeff_In_e0einf_Basis_x1[4] - (d14 * d14) / 2.0; // ep
  var S1 = new Element();
  S1[1] = a1; // e1
  S1[2] = a2; // e2
  S1[3] = a3; // e3
  S1[4] = _coeff_In_e0einf_Basis_x1[4] - (d14 * d14) / 2.0 + -0.5; // ep
  S1[5] = _coeff_In_e0einf_Basis_x1[4] - (d14 * d14) / 2.0 + 0.5; // em
  var _coeff_In_e0einf_Basis_S2 = new Element();
  _coeff_In_e0einf_Basis_S2[4] = x2[4] - (d24 * d24) / 2.0; // ep
  var S2 = new Element();
  S2[1] = b1; // e1
  S2[2] = b2; // e2
  S2[3] = b3; // e3
  S2[4] = x2[4] - (d24 * d24) / 2.0 + -0.5; // ep
  S2[5] = x2[4] - (d24 * d24) / 2.0 + 0.5; // em
  var _coeff_In_e0einf_Basis_S3 = new Element();
  _coeff_In_e0einf_Basis_S3[4] = x3[4] - (d34 * d34) / 2.0; // ep
  var S3 = new Element();
  S3[1] = c1; // e1
  S3[2] = c2; // e2
  S3[3] = c3; // e3
  S3[4] = x3[4] - (d34 * d34) / 2.0 + -0.5; // ep
  S3[5] = x3[4] - (d34 * d34) / 2.0 + 0.5; // em
  var _coeff_In_e0einf_Basis_PP4 = new Element();
  _coeff_In_e0einf_Basis_PP4[16] = (a1 * b2 + (-(a2 * b1))) * c3 + (-((a1 * b3 + (-(a3 * b1))) * c2)) + (a2 * b3 + (-(a3 * b2))) * c1; // e1 ^ (e2 ^ e3)
  _coeff_In_e0einf_Basis_PP4[17] = (a1 * b2 + (-(a2 * b1))) * _coeff_In_e0einf_Basis_S3[4] + (-((a1 * _coeff_In_e0einf_Basis_S2[4] + (-(_coeff_In_e0einf_Basis_S1[4] * b1))) * c2)) + (a2 * _coeff_In_e0einf_Basis_S2[4] + (-(_coeff_In_e0einf_Basis_S1[4] * b2))) * c1; // e1 ^ (e2 ^ ep)
  _coeff_In_e0einf_Basis_PP4[18] = a1 * b2 + (-(a2 * b1)) + (-((a1 + (-b1)) * c2)) + (a2 + (-b2)) * c1; // e1 ^ (e2 ^ em)
  _coeff_In_e0einf_Basis_PP4[19] = (a1 * b3 + (-(a3 * b1))) * _coeff_In_e0einf_Basis_S3[4] + (-((a1 * _coeff_In_e0einf_Basis_S2[4] + (-(_coeff_In_e0einf_Basis_S1[4] * b1))) * c3)) + (a3 * _coeff_In_e0einf_Basis_S2[4] + (-(_coeff_In_e0einf_Basis_S1[4] * b3))) * c1; // e1 ^ (e3 ^ ep)
  _coeff_In_e0einf_Basis_PP4[20] = a1 * b3 + (-(a3 * b1)) + (-((a1 + (-b1)) * c3)) + (a3 + (-b3)) * c1; // e1 ^ (e3 ^ em)
  _coeff_In_e0einf_Basis_PP4[21] = a1 * _coeff_In_e0einf_Basis_S2[4] + (-(_coeff_In_e0einf_Basis_S1[4] * b1)) + (-((a1 + (-b1)) * _coeff_In_e0einf_Basis_S3[4])) + (_coeff_In_e0einf_Basis_S1[4] + (-_coeff_In_e0einf_Basis_S2[4])) * c1; // e1 ^ (ep ^ em)
  _coeff_In_e0einf_Basis_PP4[22] = (a2 * b3 + (-(a3 * b2))) * _coeff_In_e0einf_Basis_S3[4] + (-((a2 * _coeff_In_e0einf_Basis_S2[4] + (-(_coeff_In_e0einf_Basis_S1[4] * b2))) * c3)) + (a3 * _coeff_In_e0einf_Basis_S2[4] + (-(_coeff_In_e0einf_Basis_S1[4] * b3))) * c2; // e2 ^ (e3 ^ ep)
  _coeff_In_e0einf_Basis_PP4[23] = a2 * b3 + (-(a3 * b2)) + (-((a2 + (-b2)) * c3)) + (a3 + (-b3)) * c2; // e2 ^ (e3 ^ em)
  _coeff_In_e0einf_Basis_PP4[24] = a2 * _coeff_In_e0einf_Basis_S2[4] + (-(_coeff_In_e0einf_Basis_S1[4] * b2)) + (-((a2 + (-b2)) * _coeff_In_e0einf_Basis_S3[4])) + (_coeff_In_e0einf_Basis_S1[4] + (-_coeff_In_e0einf_Basis_S2[4])) * c2; // e2 ^ (ep ^ em)
  _coeff_In_e0einf_Basis_PP4[25] = a3 * _coeff_In_e0einf_Basis_S2[4] + (-(_coeff_In_e0einf_Basis_S1[4] * b3)) + (-((a3 + (-b3)) * _coeff_In_e0einf_Basis_S3[4])) + (_coeff_In_e0einf_Basis_S1[4] + (-_coeff_In_e0einf_Basis_S2[4])) * c3; // e3 ^ (ep ^ em)
  var PP4 = new Element();
  PP4[16] = (a1 * b2 + (-(a2 * b1))) * c3 + (-((a1 * b3 + (-(a3 * b1))) * c2)) + (a2 * b3 + (-(a3 * b2))) * c1; // e1 ^ (e2 ^ e3)
  PP4[17] = (a1 * b2 + (-(a2 * b1))) * _coeff_In_e0einf_Basis_S3[4] + (-((a1 * _coeff_In_e0einf_Basis_S2[4] + (-(_coeff_In_e0einf_Basis_S1[4] * b1))) * c2)) + (a2 * _coeff_In_e0einf_Basis_S2[4] + (-(_coeff_In_e0einf_Basis_S1[4] * b2))) * c1 + -0.5 * (a1 * b2 + (-(a2 * b1)) + (-((a1 + (-b1)) * c2)) + (a2 + (-b2)) * c1); // e1 ^ (e2 ^ ep)
  PP4[18] = (a1 * b2 + (-(a2 * b1))) * _coeff_In_e0einf_Basis_S3[4] + (-((a1 * _coeff_In_e0einf_Basis_S2[4] + (-(_coeff_In_e0einf_Basis_S1[4] * b1))) * c2)) + (a2 * _coeff_In_e0einf_Basis_S2[4] + (-(_coeff_In_e0einf_Basis_S1[4] * b2))) * c1 + (a1 * b2 + (-(a2 * b1)) + (-((a1 + (-b1)) * c2)) + (a2 + (-b2)) * c1) / 2.0; // e1 ^ (e2 ^ em)
  PP4[19] = (a1 * b3 + (-(a3 * b1))) * _coeff_In_e0einf_Basis_S3[4] + (-((a1 * _coeff_In_e0einf_Basis_S2[4] + (-(_coeff_In_e0einf_Basis_S1[4] * b1))) * c3)) + (a3 * _coeff_In_e0einf_Basis_S2[4] + (-(_coeff_In_e0einf_Basis_S1[4] * b3))) * c1 + -0.5 * (a1 * b3 + (-(a3 * b1)) + (-((a1 + (-b1)) * c3)) + (a3 + (-b3)) * c1); // e1 ^ (e3 ^ ep)
  PP4[20] = (a1 * b3 + (-(a3 * b1))) * _coeff_In_e0einf_Basis_S3[4] + (-((a1 * _coeff_In_e0einf_Basis_S2[4] + (-(_coeff_In_e0einf_Basis_S1[4] * b1))) * c3)) + (a3 * _coeff_In_e0einf_Basis_S2[4] + (-(_coeff_In_e0einf_Basis_S1[4] * b3))) * c1 + (a1 * b3 + (-(a3 * b1)) + (-((a1 + (-b1)) * c3)) + (a3 + (-b3)) * c1) / 2.0; // e1 ^ (e3 ^ em)
  PP4[21] = a1 * _coeff_In_e0einf_Basis_S2[4] + (-(_coeff_In_e0einf_Basis_S1[4] * b1)) + (-((a1 + (-b1)) * _coeff_In_e0einf_Basis_S3[4])) + (_coeff_In_e0einf_Basis_S1[4] + (-_coeff_In_e0einf_Basis_S2[4])) * c1; // e1 ^ (ep ^ em)
  PP4[22] = (a2 * b3 + (-(a3 * b2))) * _coeff_In_e0einf_Basis_S3[4] + (-((a2 * _coeff_In_e0einf_Basis_S2[4] + (-(_coeff_In_e0einf_Basis_S1[4] * b2))) * c3)) + (a3 * _coeff_In_e0einf_Basis_S2[4] + (-(_coeff_In_e0einf_Basis_S1[4] * b3))) * c2 + -0.5 * (a2 * b3 + (-(a3 * b2)) + (-((a2 + (-b2)) * c3)) + (a3 + (-b3)) * c2); // e2 ^ (e3 ^ ep)
  PP4[23] = (a2 * b3 + (-(a3 * b2))) * _coeff_In_e0einf_Basis_S3[4] + (-((a2 * _coeff_In_e0einf_Basis_S2[4] + (-(_coeff_In_e0einf_Basis_S1[4] * b2))) * c3)) + (a3 * _coeff_In_e0einf_Basis_S2[4] + (-(_coeff_In_e0einf_Basis_S1[4] * b3))) * c2 + (a2 * b3 + (-(a3 * b2)) + (-((a2 + (-b2)) * c3)) + (a3 + (-b3)) * c2) / 2.0; // e2 ^ (e3 ^ em)
  PP4[24] = a2 * _coeff_In_e0einf_Basis_S2[4] + (-(_coeff_In_e0einf_Basis_S1[4] * b2)) + (-((a2 + (-b2)) * _coeff_In_e0einf_Basis_S3[4])) + (_coeff_In_e0einf_Basis_S1[4] + (-_coeff_In_e0einf_Basis_S2[4])) * c2; // e2 ^ (ep ^ em)
  PP4[25] = a3 * _coeff_In_e0einf_Basis_S2[4] + (-(_coeff_In_e0einf_Basis_S1[4] * b3)) + (-((a3 + (-b3)) * _coeff_In_e0einf_Basis_S3[4])) + (_coeff_In_e0einf_Basis_S1[4] + (-_coeff_In_e0einf_Basis_S2[4])) * c3; // e3 ^ (ep ^ em)
  var _coeff_In_e0einf_Basis_DualPP4 = new Element();
  _coeff_In_e0einf_Basis_DualPP4[6] = (-_coeff_In_e0einf_Basis_PP4[25]); // e1 ^ e2
  _coeff_In_e0einf_Basis_DualPP4[8] = (-_coeff_In_e0einf_Basis_PP4[22]); // e1 ^ ep
  _coeff_In_e0einf_Basis_DualPP4[10] = (-_coeff_In_e0einf_Basis_PP4[21]); // e2 ^ e3
  _coeff_In_e0einf_Basis_DualPP4[12] = (-_coeff_In_e0einf_Basis_PP4[20]); // e2 ^ em
  _coeff_In_e0einf_Basis_DualPP4[13] = (-_coeff_In_e0einf_Basis_PP4[17]); // e3 ^ ep
  var DualPP4 = new Element();
  DualPP4[6] = (-_coeff_In_e0einf_Basis_PP4[25]); // e1 ^ e2
  DualPP4[7] = _coeff_In_e0einf_Basis_PP4[24]; // e1 ^ e3
  DualPP4[8] = (-_coeff_In_e0einf_Basis_PP4[22]) + -0.5 * _coeff_In_e0einf_Basis_PP4[23]; // e1 ^ ep
  DualPP4[9] = (-_coeff_In_e0einf_Basis_PP4[22]) + _coeff_In_e0einf_Basis_PP4[23] / 2.0; // e1 ^ em
  DualPP4[10] = (-_coeff_In_e0einf_Basis_PP4[21]); // e2 ^ e3
  DualPP4[11] = _coeff_In_e0einf_Basis_PP4[19] + -0.5 * (-_coeff_In_e0einf_Basis_PP4[20]); // e2 ^ ep
  DualPP4[12] = _coeff_In_e0einf_Basis_PP4[19] + (-_coeff_In_e0einf_Basis_PP4[20]) / 2.0; // e2 ^ em
  DualPP4[13] = (-_coeff_In_e0einf_Basis_PP4[17]) + -0.5 * _coeff_In_e0einf_Basis_PP4[18]; // e3 ^ ep
  DualPP4[14] = (-_coeff_In_e0einf_Basis_PP4[17]) + _coeff_In_e0einf_Basis_PP4[18] / 2.0; // e3 ^ em
  DualPP4[15] = _coeff_In_e0einf_Basis_PP4[16]; // ep ^ em
  var x4a = new Element();
  x4a[1] = Math.sqrt((-(_coeff_In_e0einf_Basis_DualPP4[6] * _coeff_In_e0einf_Basis_DualPP4[6])) + (-(_coeff_In_e0einf_Basis_PP4[24] * _coeff_In_e0einf_Basis_PP4[24])) + _coeff_In_e0einf_Basis_DualPP4[8] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_DualPP4[8] + (-(_coeff_In_e0einf_Basis_DualPP4[10] * _coeff_In_e0einf_Basis_DualPP4[10])) + _coeff_In_e0einf_Basis_PP4[19] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_PP4[19] + _coeff_In_e0einf_Basis_DualPP4[13] * _coeff_In_e0einf_Basis_PP4[18] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_DualPP4[13] + _coeff_In_e0einf_Basis_PP4[16] * _coeff_In_e0einf_Basis_PP4[16]) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + (-_coeff_In_e0einf_Basis_DualPP4[6]) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + (-_coeff_In_e0einf_Basis_PP4[24]) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + (-((-_coeff_In_e0einf_Basis_PP4[23]) * _coeff_In_e0einf_Basis_PP4[16] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))); // e1
  x4a[2] = Math.sqrt((-(_coeff_In_e0einf_Basis_DualPP4[6] * _coeff_In_e0einf_Basis_DualPP4[6])) + (-(_coeff_In_e0einf_Basis_PP4[24] * _coeff_In_e0einf_Basis_PP4[24])) + _coeff_In_e0einf_Basis_DualPP4[8] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_DualPP4[8] + (-(_coeff_In_e0einf_Basis_DualPP4[10] * _coeff_In_e0einf_Basis_DualPP4[10])) + _coeff_In_e0einf_Basis_PP4[19] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_PP4[19] + _coeff_In_e0einf_Basis_DualPP4[13] * _coeff_In_e0einf_Basis_PP4[18] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_DualPP4[13] + _coeff_In_e0einf_Basis_PP4[16] * _coeff_In_e0einf_Basis_PP4[16]) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + (-((-_coeff_In_e0einf_Basis_DualPP4[6]) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_DualPP4[10]) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + (-((-_coeff_In_e0einf_Basis_DualPP4[12]) * _coeff_In_e0einf_Basis_PP4[16] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))); // e2
  x4a[3] = Math.sqrt((-(_coeff_In_e0einf_Basis_DualPP4[6] * _coeff_In_e0einf_Basis_DualPP4[6])) + (-(_coeff_In_e0einf_Basis_PP4[24] * _coeff_In_e0einf_Basis_PP4[24])) + _coeff_In_e0einf_Basis_DualPP4[8] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_DualPP4[8] + (-(_coeff_In_e0einf_Basis_DualPP4[10] * _coeff_In_e0einf_Basis_DualPP4[10])) + _coeff_In_e0einf_Basis_PP4[19] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_PP4[19] + _coeff_In_e0einf_Basis_DualPP4[13] * _coeff_In_e0einf_Basis_PP4[18] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_DualPP4[13] + _coeff_In_e0einf_Basis_PP4[16] * _coeff_In_e0einf_Basis_PP4[16]) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + (-((-_coeff_In_e0einf_Basis_PP4[24]) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-((-_coeff_In_e0einf_Basis_DualPP4[10]) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-((-_coeff_In_e0einf_Basis_PP4[18]) * _coeff_In_e0einf_Basis_PP4[16] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))); // e3
  x4a[4] = Math.sqrt((-(_coeff_In_e0einf_Basis_DualPP4[6] * _coeff_In_e0einf_Basis_DualPP4[6])) + (-(_coeff_In_e0einf_Basis_PP4[24] * _coeff_In_e0einf_Basis_PP4[24])) + _coeff_In_e0einf_Basis_DualPP4[8] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_DualPP4[8] + (-(_coeff_In_e0einf_Basis_DualPP4[10] * _coeff_In_e0einf_Basis_DualPP4[10])) + _coeff_In_e0einf_Basis_PP4[19] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_PP4[19] + _coeff_In_e0einf_Basis_DualPP4[13] * _coeff_In_e0einf_Basis_PP4[18] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_DualPP4[13] + _coeff_In_e0einf_Basis_PP4[16] * _coeff_In_e0einf_Basis_PP4[16]) * _coeff_In_e0einf_Basis_PP4[16] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + (-((-_coeff_In_e0einf_Basis_DualPP4[8]) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-((-_coeff_In_e0einf_Basis_PP4[19]) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-((-_coeff_In_e0einf_Basis_DualPP4[13]) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-((-_coeff_In_e0einf_Basis_PP4[16]) * _coeff_In_e0einf_Basis_PP4[16] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + -0.5 * ((-((-_coeff_In_e0einf_Basis_PP4[23]) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-((-_coeff_In_e0einf_Basis_DualPP4[12]) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-((-_coeff_In_e0einf_Basis_PP4[18]) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18])))); // ep
  x4a[5] = Math.sqrt((-(_coeff_In_e0einf_Basis_DualPP4[6] * _coeff_In_e0einf_Basis_DualPP4[6])) + (-(_coeff_In_e0einf_Basis_PP4[24] * _coeff_In_e0einf_Basis_PP4[24])) + _coeff_In_e0einf_Basis_DualPP4[8] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_DualPP4[8] + (-(_coeff_In_e0einf_Basis_DualPP4[10] * _coeff_In_e0einf_Basis_DualPP4[10])) + _coeff_In_e0einf_Basis_PP4[19] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_PP4[19] + _coeff_In_e0einf_Basis_DualPP4[13] * _coeff_In_e0einf_Basis_PP4[18] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_DualPP4[13] + _coeff_In_e0einf_Basis_PP4[16] * _coeff_In_e0einf_Basis_PP4[16]) * _coeff_In_e0einf_Basis_PP4[16] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + (-((-_coeff_In_e0einf_Basis_DualPP4[8]) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-((-_coeff_In_e0einf_Basis_PP4[19]) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-((-_coeff_In_e0einf_Basis_DualPP4[13]) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-((-_coeff_In_e0einf_Basis_PP4[16]) * _coeff_In_e0einf_Basis_PP4[16] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + ((-((-_coeff_In_e0einf_Basis_PP4[23]) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-((-_coeff_In_e0einf_Basis_DualPP4[12]) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-((-_coeff_In_e0einf_Basis_PP4[18]) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18])))) / 2.0; // em
  x4a[16] = (-_coeff_In_e0einf_Basis_DualPP4[6]) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + (-((-_coeff_In_e0einf_Basis_PP4[24]) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_DualPP4[10]) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]); // e1 ^ (e2 ^ e3)
  x4a[17] = (-_coeff_In_e0einf_Basis_DualPP4[6]) * _coeff_In_e0einf_Basis_PP4[16] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + (-((-_coeff_In_e0einf_Basis_DualPP4[8]) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_PP4[19]) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + -0.5 * ((-((-_coeff_In_e0einf_Basis_PP4[23]) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_DualPP4[12]) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18])); // e1 ^ (e2 ^ ep)
  x4a[18] = (-_coeff_In_e0einf_Basis_DualPP4[6]) * _coeff_In_e0einf_Basis_PP4[16] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + (-((-_coeff_In_e0einf_Basis_DualPP4[8]) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_PP4[19]) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + ((-((-_coeff_In_e0einf_Basis_PP4[23]) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_DualPP4[12]) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18])) / 2.0; // e1 ^ (e2 ^ em)
  x4a[19] = (-_coeff_In_e0einf_Basis_PP4[24]) * _coeff_In_e0einf_Basis_PP4[16] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + (-((-_coeff_In_e0einf_Basis_DualPP4[8]) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_DualPP4[13]) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + -0.5 * ((-((-_coeff_In_e0einf_Basis_PP4[23]) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_PP4[18]) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18])); // e1 ^ (e3 ^ ep)
  x4a[20] = (-_coeff_In_e0einf_Basis_PP4[24]) * _coeff_In_e0einf_Basis_PP4[16] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + (-((-_coeff_In_e0einf_Basis_DualPP4[8]) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_DualPP4[13]) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + ((-((-_coeff_In_e0einf_Basis_PP4[23]) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_PP4[18]) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18])) / 2.0; // e1 ^ (e3 ^ em)
  x4a[21] = (-((-_coeff_In_e0einf_Basis_PP4[23]) * _coeff_In_e0einf_Basis_PP4[16] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_PP4[16]) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]); // e1 ^ (ep ^ em)
  x4a[22] = (-_coeff_In_e0einf_Basis_DualPP4[10]) * _coeff_In_e0einf_Basis_PP4[16] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + (-((-_coeff_In_e0einf_Basis_PP4[19]) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_DualPP4[13]) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + -0.5 * ((-((-_coeff_In_e0einf_Basis_DualPP4[12]) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_PP4[18]) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18])); // e2 ^ (e3 ^ ep)
  x4a[23] = (-_coeff_In_e0einf_Basis_DualPP4[10]) * _coeff_In_e0einf_Basis_PP4[16] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + (-((-_coeff_In_e0einf_Basis_PP4[19]) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_DualPP4[13]) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + ((-((-_coeff_In_e0einf_Basis_DualPP4[12]) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_PP4[18]) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18])) / 2.0; // e2 ^ (e3 ^ em)
  x4a[24] = (-((-_coeff_In_e0einf_Basis_DualPP4[12]) * _coeff_In_e0einf_Basis_PP4[16] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_PP4[16]) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]); // e2 ^ (ep ^ em)
  x4a[25] = (-((-_coeff_In_e0einf_Basis_PP4[18]) * _coeff_In_e0einf_Basis_PP4[16] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_PP4[16]) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]); // e3 ^ (ep ^ em)
  var x4b = new Element();
  x4b[1] = (-Math.sqrt((-(_coeff_In_e0einf_Basis_DualPP4[6] * _coeff_In_e0einf_Basis_DualPP4[6])) + (-(_coeff_In_e0einf_Basis_PP4[24] * _coeff_In_e0einf_Basis_PP4[24])) + _coeff_In_e0einf_Basis_DualPP4[8] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_DualPP4[8] + (-(_coeff_In_e0einf_Basis_DualPP4[10] * _coeff_In_e0einf_Basis_DualPP4[10])) + _coeff_In_e0einf_Basis_PP4[19] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_PP4[19] + _coeff_In_e0einf_Basis_DualPP4[13] * _coeff_In_e0einf_Basis_PP4[18] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_DualPP4[13] + _coeff_In_e0einf_Basis_PP4[16] * _coeff_In_e0einf_Basis_PP4[16])) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + (-_coeff_In_e0einf_Basis_DualPP4[6]) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + (-_coeff_In_e0einf_Basis_PP4[24]) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + (-((-_coeff_In_e0einf_Basis_PP4[23]) * _coeff_In_e0einf_Basis_PP4[16] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))); // e1
  x4b[2] = (-Math.sqrt((-(_coeff_In_e0einf_Basis_DualPP4[6] * _coeff_In_e0einf_Basis_DualPP4[6])) + (-(_coeff_In_e0einf_Basis_PP4[24] * _coeff_In_e0einf_Basis_PP4[24])) + _coeff_In_e0einf_Basis_DualPP4[8] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_DualPP4[8] + (-(_coeff_In_e0einf_Basis_DualPP4[10] * _coeff_In_e0einf_Basis_DualPP4[10])) + _coeff_In_e0einf_Basis_PP4[19] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_PP4[19] + _coeff_In_e0einf_Basis_DualPP4[13] * _coeff_In_e0einf_Basis_PP4[18] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_DualPP4[13] + _coeff_In_e0einf_Basis_PP4[16] * _coeff_In_e0einf_Basis_PP4[16])) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + (-((-_coeff_In_e0einf_Basis_DualPP4[6]) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_DualPP4[10]) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + (-((-_coeff_In_e0einf_Basis_DualPP4[12]) * _coeff_In_e0einf_Basis_PP4[16] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))); // e2
  x4b[3] = (-Math.sqrt((-(_coeff_In_e0einf_Basis_DualPP4[6] * _coeff_In_e0einf_Basis_DualPP4[6])) + (-(_coeff_In_e0einf_Basis_PP4[24] * _coeff_In_e0einf_Basis_PP4[24])) + _coeff_In_e0einf_Basis_DualPP4[8] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_DualPP4[8] + (-(_coeff_In_e0einf_Basis_DualPP4[10] * _coeff_In_e0einf_Basis_DualPP4[10])) + _coeff_In_e0einf_Basis_PP4[19] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_PP4[19] + _coeff_In_e0einf_Basis_DualPP4[13] * _coeff_In_e0einf_Basis_PP4[18] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_DualPP4[13] + _coeff_In_e0einf_Basis_PP4[16] * _coeff_In_e0einf_Basis_PP4[16])) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + (-((-_coeff_In_e0einf_Basis_PP4[24]) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-((-_coeff_In_e0einf_Basis_DualPP4[10]) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-((-_coeff_In_e0einf_Basis_PP4[18]) * _coeff_In_e0einf_Basis_PP4[16] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))); // e3
  x4b[4] = (-Math.sqrt((-(_coeff_In_e0einf_Basis_DualPP4[6] * _coeff_In_e0einf_Basis_DualPP4[6])) + (-(_coeff_In_e0einf_Basis_PP4[24] * _coeff_In_e0einf_Basis_PP4[24])) + _coeff_In_e0einf_Basis_DualPP4[8] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_DualPP4[8] + (-(_coeff_In_e0einf_Basis_DualPP4[10] * _coeff_In_e0einf_Basis_DualPP4[10])) + _coeff_In_e0einf_Basis_PP4[19] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_PP4[19] + _coeff_In_e0einf_Basis_DualPP4[13] * _coeff_In_e0einf_Basis_PP4[18] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_DualPP4[13] + _coeff_In_e0einf_Basis_PP4[16] * _coeff_In_e0einf_Basis_PP4[16])) * _coeff_In_e0einf_Basis_PP4[16] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + (-((-_coeff_In_e0einf_Basis_DualPP4[8]) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-((-_coeff_In_e0einf_Basis_PP4[19]) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-((-_coeff_In_e0einf_Basis_DualPP4[13]) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-((-_coeff_In_e0einf_Basis_PP4[16]) * _coeff_In_e0einf_Basis_PP4[16] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + -0.5 * ((-((-_coeff_In_e0einf_Basis_PP4[23]) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-((-_coeff_In_e0einf_Basis_DualPP4[12]) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-((-_coeff_In_e0einf_Basis_PP4[18]) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18])))); // ep
  x4b[5] = (-Math.sqrt((-(_coeff_In_e0einf_Basis_DualPP4[6] * _coeff_In_e0einf_Basis_DualPP4[6])) + (-(_coeff_In_e0einf_Basis_PP4[24] * _coeff_In_e0einf_Basis_PP4[24])) + _coeff_In_e0einf_Basis_DualPP4[8] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_DualPP4[8] + (-(_coeff_In_e0einf_Basis_DualPP4[10] * _coeff_In_e0einf_Basis_DualPP4[10])) + _coeff_In_e0einf_Basis_PP4[19] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_PP4[19] + _coeff_In_e0einf_Basis_DualPP4[13] * _coeff_In_e0einf_Basis_PP4[18] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_DualPP4[13] + _coeff_In_e0einf_Basis_PP4[16] * _coeff_In_e0einf_Basis_PP4[16])) * _coeff_In_e0einf_Basis_PP4[16] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + (-((-_coeff_In_e0einf_Basis_DualPP4[8]) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-((-_coeff_In_e0einf_Basis_PP4[19]) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-((-_coeff_In_e0einf_Basis_DualPP4[13]) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-((-_coeff_In_e0einf_Basis_PP4[16]) * _coeff_In_e0einf_Basis_PP4[16] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + ((-((-_coeff_In_e0einf_Basis_PP4[23]) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-((-_coeff_In_e0einf_Basis_DualPP4[12]) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-((-_coeff_In_e0einf_Basis_PP4[18]) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18])))) / 2.0; // em
  x4b[16] = (-_coeff_In_e0einf_Basis_DualPP4[6]) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + (-((-_coeff_In_e0einf_Basis_PP4[24]) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_DualPP4[10]) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]); // e1 ^ (e2 ^ e3)
  x4b[17] = (-_coeff_In_e0einf_Basis_DualPP4[6]) * _coeff_In_e0einf_Basis_PP4[16] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + (-((-_coeff_In_e0einf_Basis_DualPP4[8]) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_PP4[19]) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + -0.5 * ((-((-_coeff_In_e0einf_Basis_PP4[23]) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_DualPP4[12]) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18])); // e1 ^ (e2 ^ ep)
  x4b[18] = (-_coeff_In_e0einf_Basis_DualPP4[6]) * _coeff_In_e0einf_Basis_PP4[16] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + (-((-_coeff_In_e0einf_Basis_DualPP4[8]) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_PP4[19]) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + ((-((-_coeff_In_e0einf_Basis_PP4[23]) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_DualPP4[12]) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18])) / 2.0; // e1 ^ (e2 ^ em)
  x4b[19] = (-_coeff_In_e0einf_Basis_PP4[24]) * _coeff_In_e0einf_Basis_PP4[16] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + (-((-_coeff_In_e0einf_Basis_DualPP4[8]) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_DualPP4[13]) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + -0.5 * ((-((-_coeff_In_e0einf_Basis_PP4[23]) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_PP4[18]) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18])); // e1 ^ (e3 ^ ep)
  x4b[20] = (-_coeff_In_e0einf_Basis_PP4[24]) * _coeff_In_e0einf_Basis_PP4[16] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + (-((-_coeff_In_e0einf_Basis_DualPP4[8]) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_DualPP4[13]) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + ((-((-_coeff_In_e0einf_Basis_PP4[23]) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_PP4[18]) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18])) / 2.0; // e1 ^ (e3 ^ em)
  x4b[21] = (-((-_coeff_In_e0einf_Basis_PP4[23]) * _coeff_In_e0einf_Basis_PP4[16] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_PP4[16]) * _coeff_In_e0einf_Basis_PP4[23] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]); // e1 ^ (ep ^ em)
  x4b[22] = (-_coeff_In_e0einf_Basis_DualPP4[10]) * _coeff_In_e0einf_Basis_PP4[16] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + (-((-_coeff_In_e0einf_Basis_PP4[19]) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_DualPP4[13]) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + -0.5 * ((-((-_coeff_In_e0einf_Basis_DualPP4[12]) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_PP4[18]) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18])); // e2 ^ (e3 ^ ep)
  x4b[23] = (-_coeff_In_e0einf_Basis_DualPP4[10]) * _coeff_In_e0einf_Basis_PP4[16] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + (-((-_coeff_In_e0einf_Basis_PP4[19]) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_DualPP4[13]) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]) + ((-((-_coeff_In_e0einf_Basis_DualPP4[12]) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_PP4[18]) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18])) / 2.0; // e2 ^ (e3 ^ em)
  x4b[24] = (-((-_coeff_In_e0einf_Basis_DualPP4[12]) * _coeff_In_e0einf_Basis_PP4[16] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_PP4[16]) * _coeff_In_e0einf_Basis_DualPP4[12] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]); // e2 ^ (ep ^ em)
  x4b[25] = (-((-_coeff_In_e0einf_Basis_PP4[18]) * _coeff_In_e0einf_Basis_PP4[16] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]))) + (-_coeff_In_e0einf_Basis_PP4[16]) * _coeff_In_e0einf_Basis_PP4[18] / (_coeff_In_e0einf_Basis_PP4[23] * _coeff_In_e0einf_Basis_PP4[23] + _coeff_In_e0einf_Basis_DualPP4[12] * _coeff_In_e0einf_Basis_DualPP4[12] + _coeff_In_e0einf_Basis_PP4[18] * _coeff_In_e0einf_Basis_PP4[18]); // e3 ^ (ep ^ em)
  return [0x0000FF, S1, "S1", 0xFF0000, S2, "S2", 0x00FF00, S3, "S3"];
}
function_to_sliders(calculate);

var canvas = this.graph(()=> { 
let __currSysTime = performance.now();
TIME = (__currSysTime - __sysTimeStart) / 1000;
return [
...calculate(...sliderValues)
]}, { conformal:true, gl:true, animate: true, ipns:true, noZ:true, grid:true, labels:true, thresh:0.05, lineWidth: 2 });
canvas.style.width = '49vw';
canvas.style.height = '50vh';
document.getElementById("ganjacanvas").appendChild(canvas);
});
